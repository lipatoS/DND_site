python -m venv myvenv - создание окружающей среды "myvenv"

& .\myvenv\Scripts\Activate - что бы в неё перейти, нужно её активировать

python -m pip install --upgrade pip - апгрейд всех файлов в pip

pip install django== - установка джанго(необходимо выбрать версию)

mkdir app - создание основной папки

cd app - переход в дерикторию app

cd.. - возврат на одну дерикторию назад

django-admin.exe startproject settings . - загружает настройки джанго (точка в конце делает пакет, а не папку)
Пакет - это специальная структура организации кода в Python,
которая позволяет создавать иерархию модулей и подпакетов для организации кода в более удобной иерархической структуре.

python manage.py startapp people - создает базовую структуру файлов и каталогов для вашего нового приложения.
в данном случае имя пакета "people"

для финальной настройки необходимо:
1) settings -> settings
ALLOWED_HOSTS = ['*'] - это означает, что все хосты разрешены и могут обращаться к вашему приложению.
2) INSTALLED_APPS = [
    ...
    'people',] - добавить в конец созданные пакеты, в данном случае "people"
3) правой кнопкой мыши на app -> Mark Directory as -> Sources Root

python manage.py runserver - запуск сервера

_________________________________________________

РАБОТА С БД

python manage.py makemigrations - создаёт файл миграцию(файл описывающий на языке sql изменения в таблице)
python manage.py migrate - запускает файл миграции



СОЗДАНИЕ ФАЙЛА ДЛЯ ПРОСТОЙ УСТАНОВКИ PIP БИБЛИОТЕК

Для того чтобы упростить процесс установки всех необходимых зависимостей для Django-проекта на другом компьютере,
вы можете использовать файл requirements.txt. Этот файл содержит список всех зависимостей вашего проекта,
и его можно легко передать на другой компьютер для установки всех необходимых пакетов с помощью команды
pip install -r requirements.txt.

Вот как вы можете создать файл requirements.txt для вашего проекта Django:
1. Откройте командную строку и перейдите в каталог вашего проекта Django.
2. Активируйте виртуальное окружение (если вы используете его для вашего проекта).
   Это необязательно, но рекомендуется для изоляции зависимостей вашего проекта от системных пакетов.
3. Запустите следующую команду, чтобы создать файл requirements.txt:
 pip freeze > requirements.txt
Эта команда сохранит список всех установленных пакетов в файле requirements.txt.

Теперь у вас есть файл requirements.txt с перечисленными зависимостями вашего проекта.
Чтобы установить все зависимости на другом компьютере, выполните следующую команду:
pip install -r requirements.txt